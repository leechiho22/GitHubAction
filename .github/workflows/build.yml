name: 'Build Android App'

on:
    pull_request:
        branches:
            - 'main'
jobs:

    test_app:
        name: Test app
        runs-on: ubuntu-latest

        steps:
            -   name: checkout
                uses: actions/checkout@v4

            -   name: Enable KVM group perms
                run: |
                    echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
                    sudo udevadm control --reload-rules
                    sudo udevadm trigger --name-match=kvm

            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    java-version: '17'
                    distribution: 'corretto'

            -   name: Setup Android SDK
                uses: android-actions/setup-android@v2

            -   name: Gradle cache
                uses: gradle/actions/setup-gradle@v3

            -   name: Build Android Project
                run: ./gradlew assembleDebug assembleAndroidTest

            -   name: AVD cache
                uses: actions/cache@v4
                id: avd-cache
                with:
                    path: |
                        ~/.android/avd/*
                        ~/.android/adb*
                    key: avd-33

            -   name: Create AVD and generate snapshot for caching
                if: steps.avd-cache.outputs.cache-hit != 'true'
                uses: reactivecircus/android-emulator-runner@v2
                with:
                    api-level: 33
                    target: google_apis
                    arch: x86_64
                    profile: pixel_5
                    force-avd-creation: false
                    emulator-options: -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
                    disable-animations: false
                    script: echo "Generated AVD snapshot for caching."

            -   name: Run Android instrumented tests
                uses: reactivecircus/android-emulator-runner@v2
                with:
                    api-level: 33
                    target: google_apis
                    arch: x86_64
                    profile: pixel_5
                    emulator-boot-timeout: 360    #6 minutes
                    force-avd-creation: false
                    emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
                    disable-animations: true
                    script: |
                        avdmanager list device
                        echo "Uninstall existing apk"
                        adb uninstall com.example.githubactionapplication.test || true
                        adb uninstall com.example.githubactionapplication || true
                        echo "Install debug apk"
                        adb install -r app/build/outputs/apk/debug/app-debug.apk
                        echo "Install test apk"
                        adb install -r app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
                        echo "Running instrumentation tests"
                        adb shell am instrument -w com.example.githubactionapplication.test/androidx.test.runner.AndroidJUnitRunner
                        echo "Clean up installed apk"
                        adb uninstall com.example.githubactionapplication.test || true
                        adb uninstall com.example.githubactionapplication || true

            - name: Debugging - Print directory contents
              run: |
                  ls -R "${GITHUB_WORKSPACE}"

            -   name: Check for FAILURES!!!
                run: |
                    # This command checks if the log contains "FAILURES!!!"
                    if grep -q 'FAILURES!!!' "${GITHUB_RUNNER_DEBUG}/_diag/session.log"; then
                      echo "Failures detected in the log!"
                      exit 1
                    else
                      echo "No failures found in the log."
                    fi

#            -   name: Run Android instrumented tests
#                uses: reactivecircus/android-emulator-runner@v2
#                with:
#                    api-level: 33
#                    target: google_apis
#                    arch: x86_64
#                    profile: pixel_5
#                    emulator-boot-timeout: 360    #6 minutes
#                    force-avd-creation: false
#                    emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -no-snapshot -noaudio -no-boot-anim
#                    disable-animations: true
#                    script: |
#                        ./gradlew connectedAndroidTest
#
#            -   name: Upload Reports
#                uses: actions/upload-artifact@v3
#                with:
#                    name: Test-Reports
#                    path: app/build/reports
#                if: always()